name: AKTIN Deploy Docker

on:
  workflow_call:
    inputs:
      artifact-name:
        description: 'Name of the artifact to download'
        default: 'dockerfiles'
        type: string


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout "versions" File
        uses: actions/checkout@v4
        with:
          sparse-checkout: src/resources/versions
          sparse-checkout-cone-mode: false

      - name: Prepare Versions
        id: prep-versions
        run: |
          export $(grep -v '^#' src/resources/versions | xargs)
          echo "database=$DWH_GITHUB_TAG-docker$DATABASE_CONTAINER_VERSION" >> $GITHUB_OUTPUT
          echo "wildfly=$DWH_GITHUB_TAG-docker$WILDFLY_CONTAINER_VERSION" >> $GITHUB_OUTPUT
          echo "httpd=$DWH_GITHUB_TAG-docker$HTTPD_CONTAINER_VERSION" >> $GITHUB_OUTPUT

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}

      - name: Create Labels for HTTPD
        id: meta-httpd
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/aktin/notaufnahme-dwh-httpd
          tags: |
            type=raw,value=current,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ steps.prep-versions.outputs.httpd }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Create Labels for Database
        id: meta-database
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/aktin/notaufnahme-dwh-database
          tags: |
            type=raw,value=current,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ steps.prep-versions.outputs.database }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Create Labels for Wildfly
        id: meta-wildfly
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/aktin/notaufnahme-dwh-wildfly
          tags: |
            type=raw,value=current,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ steps.prep-versions.outputs.wildfly }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # TODO one step per image (are we using this?) DONE
      - name: Build and Push Docker Image HTTPD
        uses: docker/build-push-action@v6
        with:
          context: httpd/
          tags: ${{ steps.meta-httpd.outputs.tags }}
          push: true

      - name: Build and Push Docker Image Database
        uses: docker/build-push-action@v6
        with:
          context: database/
          tags: ${{ steps.meta-database.outputs.tags }}
          push: true

      - name: Build and Push Docker Image Wildfly
        uses: docker/build-push-action@v6
        with:
          context: wildfly/
          tags: ${{ steps.meta-wildfly.outputs.tags }}
          push: true

      - name: Rename Production Compose File
        if: startsWith(github.ref, 'refs/tags/v')
        run: mv compose.prod.yml compose.yml

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: compose.yml
          fail_on_unmatched_files: true
          make_latest: true