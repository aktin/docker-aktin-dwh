name: Test Docker Build & Release

on:
  workflow_dispatch:

jobs:
  test-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Generate cache key from versions file
        id: cache
        run: |
          set -euo pipefail
          DIGEST="$(md5sum src/resources/versions | awk '{print $1}')"
          echo "Cache Key: ${DIGEST}"

      - name: Build Docker images
        env:
          DEV_API_KEY: ${{ secrets.DEV_API_KEY }}
        working-directory: src
        run: ./build.sh --create-latest

      - name: Login to GitHub Docker Registry
        run: |
          echo "Would login to: ghcr.io as ${{ github.actor }}"

      - name: Deploy Dockerfiles
        run: |
          for image in database wildfly httpd; do
            echo "Images matching *$image* (should be 2):"
            docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep -i "$image" || echo "  No $image images found"
          done

      - name: Release
        run: |
          if [ -f "src/build/compose.yml" ]; then
            echo "compose.yml exists ($(wc -l < src/build/compose.yml) lines)"
          else
            echo "compose.yml not found"
          fi
          if [ -f ".github/release_notes.md" ]; then
            echo "release_notes.md exists ($(wc -l < .github/release_notes.md) lines)"
          else
            echo "release_notes.md not found"
          fi
